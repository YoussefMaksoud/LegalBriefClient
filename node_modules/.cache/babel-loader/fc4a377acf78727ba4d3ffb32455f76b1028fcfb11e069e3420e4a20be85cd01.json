{"ast":null,"code":"var _jsxFileName = \"/Users/youssef/Desktop/LegalBriefClient/src/Components/Option.js\";\nimport React, { Component } from 'react';\nimport '../Styling/Option.css';\nimport Modal from './Modal';\nimport parse from 'html-react-parser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactModal.setAppElement('#root'); // Replace '#root' with the root element of your application\n\nclass Option extends Component {\n  constructor(props) {\n    super(props);\n    this.handleToggleModal = () => {\n      this.setState(prevState => ({\n        showModal: !prevState.showModal\n      }));\n    };\n    this.state = {\n      showModal: false\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"opt-cont\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"opt-name\",\n        onClick: this.props.onClick,\n        children: this.props.option_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n        isOpen: this.state.showModal,\n        onRequestClose: this.handleToggleModal,\n        contentLabel: \"Option Description Modal\",\n        className: \"option-modal\",\n        overlayClassName: \"option-modal-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"op-desc\",\n          children: parse(this.props.option_description)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleToggleModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleToggleModal,\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Option;","map":{"version":3,"names":["React","Component","Modal","parse","ReactModal","setAppElement","Option","constructor","props","handleToggleModal","setState","prevState","showModal","state","render","onClick","option_name","option_description"],"sources":["/Users/youssef/Desktop/LegalBriefClient/src/Components/Option.js"],"sourcesContent":["import React, { Component } from 'react';\nimport '../Styling/Option.css';\nimport Modal from './Modal';\nimport parse from 'html-react-parser';\n\nReactModal.setAppElement('#root'); // Replace '#root' with the root element of your application\n\n\nclass Option extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n  }\n\n  handleToggleModal = () => {\n    this.setState((prevState) => ({\n      showModal: !prevState.showModal\n    }));\n  }\n\n  render() {\n    return (\n      <div id=\"opt-cont\">\n        <div id=\"opt-name\" onClick={this.props.onClick}>{this.props.option_name}</div>\n        <div id=\"check\"></div>\n        <ReactModal\n          isOpen={this.state.showModal}\n          onRequestClose={this.handleToggleModal}\n          contentLabel=\"Option Description Modal\"\n          className=\"option-modal\"\n          overlayClassName=\"option-modal-overlay\"\n        >\n          <div id='op-desc'>{parse(this.props.option_description)}</div>\n          <button onClick={this.handleToggleModal}>Close</button>\n        </ReactModal>\n        <button onClick={this.handleToggleModal}>Open</button>\n      </div>\n    );\n  }\n}\n\nexport default Option;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,uBAAuB;AAC9B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,mBAAmB;AAAC;AAEtCC,UAAU,CAACC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;;AAGnC,MAAMC,MAAM,SAASL,SAAS,CAAC;EAC7BM,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAMfC,iBAAiB,GAAG,MAAM;MACxB,IAAI,CAACC,QAAQ,CAAEC,SAAS,KAAM;QAC5BC,SAAS,EAAE,CAACD,SAAS,CAACC;MACxB,CAAC,CAAC,CAAC;IACL,CAAC;IATC,IAAI,CAACC,KAAK,GAAG;MACXD,SAAS,EAAE;IACb,CAAC;EACH;EAQAE,MAAM,GAAG;IACP,oBACE;MAAK,EAAE,EAAC,UAAU;MAAA,wBAChB;QAAK,EAAE,EAAC,UAAU;QAAC,OAAO,EAAE,IAAI,CAACN,KAAK,CAACO,OAAQ;QAAA,UAAE,IAAI,CAACP,KAAK,CAACQ;MAAW;QAAA;QAAA;QAAA;MAAA,QAAO,eAC9E;QAAK,EAAE,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eACtB,QAAC,UAAU;QACT,MAAM,EAAE,IAAI,CAACH,KAAK,CAACD,SAAU;QAC7B,cAAc,EAAE,IAAI,CAACH,iBAAkB;QACvC,YAAY,EAAC,0BAA0B;QACvC,SAAS,EAAC,cAAc;QACxB,gBAAgB,EAAC,sBAAsB;QAAA,wBAEvC;UAAK,EAAE,EAAC,SAAS;UAAA,UAAEN,KAAK,CAAC,IAAI,CAACK,KAAK,CAACS,kBAAkB;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO,eAC9D;UAAQ,OAAO,EAAE,IAAI,CAACR,iBAAkB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5C,eACb;QAAQ,OAAO,EAAE,IAAI,CAACA,iBAAkB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD;EAEV;AACF;AAEA,eAAeH,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}